<?xml version="1.0"?>
<launch>

    <arg name="init_pose"/>

    <!-- Spawn a camera into Gazebo -->
    <node name="spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -param camera1/robot_description -model camera $(arg init_pose)"/>

    <!-- Convert joint states to TF transforms for rviz, etc -->
    <node ns="camera1" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
        <param name="rate" value="50"/>
        <!-- <remap from="/joint_states" to="/camera1/joint_states" /> -->
    </node>

    <!-- Indicate in the tf tree that the camera and platform's worlds coincide -->
    <node name="static_tf2_world_broadcaster" type="static_tf2_world_broadcaster.py" pkg="camera"/>

    <!-- Add a new frame to retrieve the right theorical orientation of the camera -->
    <node name="new_camera_frame" type="new_camera_frame.py" pkg="camera"/>

    <!-- Publish the true transform between the camera and the platform's frames -->
    <node name="pose_listener_publisher" type="pose_true_publisher.py" pkg="camera"/>

    <!-- Publish the transform between the world and the camera frames -->
    <node name="world_camera_transform_publisher" type="world_camera_transform_publisher.py" pkg="camera"/>

    <!-- Publish the transform between the world and the platform frames -->
    <node name="world_platform_transform_publisher" type="world_platform_transform_publisher.py" pkg="camera"/>

</launch>